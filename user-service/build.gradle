buildscript {
	repositories {
		gradlePluginPortal()
	}
	dependencies {
		classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
	}
}

plugins {
	id 'io.franzbecker.gradle-lombok' version '1.14'
	id 'java'
	id 'eclipse'
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
}
apply plugin: 'com.palantir.docker'
lombok {
	version = "${lombokVersion}"
	sha256 = ""
}

sourceCompatibility = sourceCompatibilityVersion

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.cloud:spring-cloud-starter-config')
	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	compile('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

task unpack(type: Copy) {
	dependsOn bootJar
	from(zipTree(tasks.bootJar.outputs.files.singleFile))
	into("build/dependency")
}
docker {
	dockerfile file('Dockerfile')
	name "${project.group}/${bootJar.baseName}:${project.version}"

	copySpec.from(tasks.unpack.outputs).into("dependency")
	buildArgs(['DEPENDENCY': "dependency"])
}


