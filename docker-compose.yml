version: '3.3'
services:
  registry:    
    image: ${APP_GROUP_ID}/registry:${APP_VERSION}
    ports:
      - 8761:8761
    depends_on:
      - config
    restart: unless-stopped
  config:     
    image: ${APP_GROUP_ID}/config:${APP_VERSION}
    ports:
      - 8888:8888
    restart: unless-stopped
  user-service:
      image: ${APP_GROUP_ID}/user-service:${APP_VERSION}
      ports:
        - 8801:8801
      volumes:
        - user-service-logs:/app/logs
      depends_on:
        - config
        - registry
        - elasticsearch
#        - logstash
      restart: unless-stopped
  gateway:
      image: ${APP_GROUP_ID}/gateway:${APP_VERSION}
      ports:
        - 8900:8900
      depends_on:
        - config
        - registry
      restart: unless-stopped
  monitoring:
      image: ${APP_GROUP_ID}/monitoring:${APP_VERSION}
      ports:
        - 8800:8800
      depends_on:
        - config
        - registry
      restart: unless-stopped
  elasticsearch:
      image: elasticsearch:${ELK_VERSION}
      ports:
        - 9200:9200
        - 9300:9300
      restart: unless-stopped
  kibana:
      image: kibana:${ELK_VERSION}
      ports:
        - 5601:5601
      restart: unless-stopped
      depends_on:
        - elasticsearch
#  logstash:
#    image: logstash:${ELK_VERSION}
#    entrypoint: logstash -e "input { tcp { port => 5000 codec => \"json\" } } output { elasticsearch { hosts => [\"elasticsearch\"] index => \"micro-%{serviceName}\"} }"
#    ports:
#      - 5000:5000
#    depends_on:
#      - elasticsearch
  filebeat:
    image:  docker.elastic.co/beats/filebeat:${ELK_VERSION}
    volumes:
      - user-service-logs:/data/logs
      - ./configs/filebeat/:/app/config
    entrypoint: filebeat -e -c /app/config/filebeat.yml

volumes:
  user-service-logs:

